<Application x:Class="CourseAch.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:CourseAch"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

<!--#region Colors -->
        <GradientStopCollection x:Key="MyGlassGradientStopsResource">
                <GradientStop Color="WhiteSmoke" Offset="0.2" />
                <GradientStop Color="Transparent" Offset="0.4" />
                <GradientStop Color="WhiteSmoke" Offset="0.5"/>
                <GradientStop Color="Transparent" Offset="0.75" />
                <GradientStop Color="WhiteSmoke" Offset="0.9" />
                <GradientStop Color="Transparent" Offset="1" />
            </GradientStopCollection>

        <SolidColorBrush x:Key="Simple" Color="LightBlue"/>

        <LinearGradientBrush x:Key="MyGlassBrushResource" StartPoint="0,0" EndPoint="1,1" Opacity="0.75"
                                 GradientStops="{StaticResource MyGlassGradientStopsResource}" />

        <LinearGradientBrush x:Key="GrayBlueGradientBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="DarkGray" Offset="0" />
            <GradientStop Color="White" Offset="0.5" />
            <GradientStop Color="DarkGray" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="BlueGradientBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="SkyBlue" Offset="0" />
            <GradientStop Color="White" Offset="0.7" />
            <GradientStop Color="SkyBlue" Offset="1" />
        </LinearGradientBrush>


        <LinearGradientBrush x:Key="BlackBlueGradientBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="Black" Offset="0.45"/>
                <GradientStop Color="DarkGray" Offset="0.55"/>
            <GradientStop Color="Black" Offset="0.65"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="StretchMetallGradient"  EndPoint="0.5,1" StartPoint="0.52,0">
            <GradientStop Color="#FF3C3C3C" Offset="0"/>
            <GradientStop Color="White" Offset="0.636"/>
            <GradientStop Color="#FFC9C9C9" Offset="0.18"/>
            <GradientStop Color="#FF424242" Offset="0.385"/>
            <GradientStop Color="#FF4B4B4B" Offset="0.937"/>
        </LinearGradientBrush>


        <!--Control colors.-->
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
        <Color x:Key="ControlPressedColor">#FF211AA9</Color>


        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                    Offset="0" />
                    <GradientStop Color="#600000FF"
                    Offset="0.4" />
                    <GradientStop Color="#600000FF"
                    Offset="0.6" />
                    <GradientStop Color="#000000FF"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
<!--#endregion-->

        <!--#region Button Styles -->

        <Style TargetType="{x:Type Button}" x:Key="GlassButton">
            <Setter Property="Background" Value="{StaticResource GrayBlueGradientBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ClipToBounds="True">

                            <!-- Внешний прямоугольник с закруглёнными краями -->
                            <Rectangle x:Name="outerRectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="{TemplateBinding Background}" 
      RadiusX="20" RadiusY="20" StrokeThickness="5" Fill="Transparent" />

                            <!-- Внутренний прямоугольник с закруглёнными краями -->
                            <Rectangle x:Name="innerRectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="Transparent" 
        StrokeThickness="20" Fill="{TemplateBinding Background}" RadiusX="20" RadiusY="20"/>
                            <!-- Фокус в том, что они лежат друг на друге, у одного видна граница, но внутренности прозрачные, а у другого наоборот-->

                            <!-- Стеклянный прямоугольник -->
                            <Rectangle x:Name="glassCube" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" StrokeThickness="2" RadiusX="10"
                                       RadiusY="10" Opacity="0" Fill="{StaticResource MyGlassBrushResource}" RenderTransformOrigin="0.5,0.5">
                                <Rectangle.Stroke>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0.0" Color="LightBlue" />
                                            <GradientStop Offset="1.0" Color="Gray" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Rectangle.Stroke>

                                <!-- На трансформацию пока не смотреть. Она просто задала ось вращения для анимации ниже -->
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <RotateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>

                                <!-- BevelBitmapEffect дает кнопке скошенный вид -->
                                <Rectangle.BitmapEffect>
                                    <BevelBitmapEffect />
                                </Rectangle.BitmapEffect>
                            </Rectangle>

                            <!-- текст на кнопке -->
                            <DockPanel Name="myContentPresenterDockPanel">
                                <ContentPresenter x:Name="myContentPresenter" Margin="20"  HorizontalAlignment="Center" VerticalAlignment="Center"
          Content="{TemplateBinding  Content}" TextBlock.Foreground="Black" />
                            </DockPanel>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!-- Анимация вращения стекла когда кнопка нажата  -->
                            <EventTrigger RoutedEvent="Button.Click">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="glassCube" 
                                            Storyboard.TargetProperty="(Rectangle.RenderTransform).(TransformGroup.Children)[1].(RotateTransform.Angle)"
                                            By="360" Duration="0:0:0.5" />
                                            <DoubleAnimation Storyboard.TargetName="glassCube" 
                                            Storyboard.TargetProperty="(Rectangle.RenderTransform).(TransformGroup.Children)[1].(RotateTransform.Angle)"
                                            To="360" Duration="0:0:0.5" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>

                            <!-- КОСТЫЛЬ-->
                            <EventTrigger RoutedEvent="LostFocus">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="glassCube" 
                                            Storyboard.TargetProperty="(Rectangle.RenderTransform).(TransformGroup.Children)[1].(RotateTransform.Angle)"
                                            To="0" Duration="0:0:0"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            
                            <!-- Анимация когда мышь наведена на кнопку -->
                            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard Name="mouseEnterBeginStoryboard">
                                        <Storyboard>
                                            <!-- Эта анимация сжимает по Х -->
                                            <DoubleAnimation Storyboard.TargetName="glassCube" 
                                            Storyboard.TargetProperty="(Rectangle.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                            By="-0.1" Duration="0:0:0.5" />
                                            <!-- Эта по У -->
                                            <DoubleAnimation Storyboard.TargetName="glassCube" 
                                            Storyboard.TargetProperty="(Rectangle.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                            By="-0.1" Duration="0:0:0.5" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            
                            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                <EventTrigger.Actions>
                                    <!-- Сбрасывает анимацию наведения мыши когда мышка уходит за кнопку -->
                                    <StopStoryboard BeginStoryboardName="mouseEnterBeginStoryboard" />
                                </EventTrigger.Actions>
                            </EventTrigger>

                            <!-- ТРИГГЕРЫ когда мышка находится над кнопкой -->
                            <Trigger Property="IsMouseOver" Value="True">

                                <!-- Изменение цвета внешнего прямоугольника, когда мышка находится над кнопкой -->
                                <Setter Property ="Rectangle.Stroke" TargetName="outerRectangle"
                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />

                                <!-- Устанавливает непрозрачность стекла в 1, потому то оно и "появляется" -->
                                <Setter Property="Rectangle.Opacity" Value="1" TargetName="glassCube" />

                                <!-- Делает текст слегка размытым, как будто сквозь размытое стекло -->
                                <Setter Property="ContentPresenter.BitmapEffect" TargetName="myContentPresenter">
                                    <Setter.Value>
                                        <BlurBitmapEffect Radius="2" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <!-- Триггер, когда кнопка получила фокус -->
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="Rectangle.Opacity" Value="1" TargetName="glassCube" />
                                <Setter Property="Rectangle.Stroke" TargetName="outerRectangle" 
                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="BlinkingBtn" TargetType="Button">
            <Setter Property="Width" Value="120"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Rectangle Fill="Black" RadiusX="8" RadiusY="8"/>

                            <Rectangle x:Name="Foundt" RadiusX="8" Opacity="0.7" RadiusY="8">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Black" Offset="1"/>
                                        <GradientStop Color="#FF00D1FF"/>
                                        <GradientStop Color="#FF00D1FF" Offset="0.072"/>
                                        <GradientStop Color="#FF464646" Offset="0.719"/>
                                        <GradientStop Color="#FF87E9FF" Offset="0.096"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>

                            <Rectangle Margin="0,2,0,0" RadiusX="8" RadiusY="8" Opacity="{Binding ElementName=Foundt, Path=Opacity}" Stroke="#FF707070" />


                            <Rectangle Margin="0,2,0,0" x:Name="Glass" RadiusX="8" RadiusY="8" Opacity="{Binding ElementName=Foundt, Path=Opacity}" Stroke="#FF707070" RenderTransformOrigin="0.5,0">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                        <GradientStop Color="#00000000" Offset="0.502"/>
                                        <GradientStop Color="#CCFFFFFF" Offset="0.317"/>
                                        <GradientStop Offset="0.044"/>
                                        <GradientStop Color="#CCFFFFFF" Offset="0.827"/>
                                        <GradientStop Offset="0.88"/>
                                        <GradientStop Color="#CCFFFFFF" Offset="1"/>
                                        <GradientStop Color="#CCFFFFFF"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                                <Rectangle.RenderTransform >
                                    <ScaleTransform/>
                                </Rectangle.RenderTransform>
                            </Rectangle>

                            <DockPanel>
                                <ContentPresenter x:Name="ThisContent" Opacity="{Binding ElementName=Foundt, Path=Opacity}" Content="{ TemplateBinding Content }"  TextBlock.Foreground="White"  TextBlock.FontSize="14" TextBlock.FontWeight="Bold" TextBlock.FontFamily="Palatino Linotype" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </DockPanel>

                            <Grid.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard x:Name="Blinking" >
                                            <Storyboard Duration="0:0:3.3" RepeatBehavior="Forever">
                                                <DoubleAnimation Storyboard.TargetName="Foundt" Storyboard.TargetProperty="Opacity" Duration="0:0:0.6" From="1" To="0"  AutoReverse="True">
                                                    <DoubleAnimation.EasingFunction>
                                                        <BounceEase Bounces="4" EasingMode="EaseOut" Bounciness="0.3" />
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>

                                <EventTrigger RoutedEvent="MouseEnter">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="Glass" Storyboard.TargetProperty="(Rectangle.RenderTransform).(ScaleTransform.ScaleY)" To="-1" Duration="0:0:0.3"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>

                                <EventTrigger RoutedEvent="MouseLeave">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="Glass" Storyboard.TargetProperty="(Rectangle.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.3"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </Grid.Triggers>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        
        <Style TargetType="Button" x:Key="MenuBtn">
            <Setter Property="Width" Value="38"/>
            <Setter Property="Height" Value="38"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Rectangle x:Name="Backgrd" RadiusX="5" RadiusY="5" Grid.RowSpan="3" Stroke="Black" StrokeThickness="1">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                                        <GradientStop Color="DarkGray" Offset="0.6"/>
                                        <GradientStop Color="White" Offset="0.5"/>
                                        <GradientStop Color="Gray" Offset="0.3"/>
                                        <GradientStop Color="WhiteSmoke" Offset="0.2"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>

                            <Rectangle x:Name="First" Fill="{StaticResource GrayBlueGradientBrush}" Stroke="Black" StrokeThickness="1" Height="6" Width="30" Margin="2,6,2,1" HorizontalAlignment="Center" VerticalAlignment="Center" RadiusX="5" RadiusY="5"/>


                            <Rectangle x:Name="Second" Fill="{StaticResource GrayBlueGradientBrush}" Stroke="Black" StrokeThickness="1" Height="6" Width="30" Grid.Row="1" Margin="2,1,2,1" HorizontalAlignment="Center" VerticalAlignment="Center"  RadiusX="5" RadiusY="5"/>

                            <Rectangle x:Name="Third" Fill="{StaticResource GrayBlueGradientBrush}" Stroke="Black" StrokeThickness="1" Height="6" Width="30" Grid.Row="2" Margin="2,1,2,6" HorizontalAlignment="Center" VerticalAlignment="Center"  RadiusX="5" RadiusY="5"/>

                        </Grid>


                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Backgrd" 
                                            Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[3].(GradientStop.Offset)" 
                                             To="0.45" Duration="0:0:0.4" AccelerationRatio="0.9"/>
                                            <DoubleAnimation Storyboard.TargetName="Backgrd" 
                                            Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[2].(GradientStop.Offset)" 
                                             To="0.5" Duration="0:0:0.4" AccelerationRatio="0.6"/>
                                            <DoubleAnimation Storyboard.TargetName="Backgrd" 
                                            Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Offset)" 
                                             To="0.7" Duration="0:0:0.4" AccelerationRatio="0.4"/>
                                            <DoubleAnimation Storyboard.TargetName="Backgrd" 
                                            Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[0].(GradientStop.Offset)" 
                                             To="0.8" Duration="0:0:0.4" AccelerationRatio="0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>



                            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Backgrd" 
                                            Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[3].(GradientStop.Offset)" 
                                             To="0.2" Duration="0:0:0.4" AccelerationRatio="0.9"/>
                                            <DoubleAnimation Storyboard.TargetName="Backgrd" 
                                            Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[2].(GradientStop.Offset)" 
                                             To="0.3" Duration="0:0:0.4" AccelerationRatio="0.6"/>
                                            <DoubleAnimation Storyboard.TargetName="Backgrd" 
                                            Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Offset)" 
                                             To="0.5" Duration="0:0:0.4" AccelerationRatio="0.4"/>
                                            <DoubleAnimation Storyboard.TargetName="Backgrd" 
                                            Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[0].(GradientStop.Offset)" 
                                             To="0.6" Duration="0:0:0.4" AccelerationRatio="0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="Click">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="First" 
                                            Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            From="DarkGray" To="Blue" Duration="0:0:0.3"  AutoReverse="True"  RepeatBehavior="0:0:0.70"/>
                                            <ColorAnimation Storyboard.TargetName="Second" 
                                            Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            From="DarkGray" To="Blue" Duration="0:0:0.3"  AutoReverse="True"  RepeatBehavior="0:0:1.30"/>
                                            <ColorAnimation Storyboard.TargetName="Third" 
                                            Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            From="DarkGray" To="Blue" Duration="0:0:0.3"  AutoReverse="True"  RepeatBehavior="0:0:1.90"/>
                                            <ColorAnimation Storyboard.TargetName="First" 
                                            Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[2].(GradientStop.Color)"
                                            From="DarkGray" To="Blue" Duration="0:0:0.3"  AutoReverse="True"  RepeatBehavior="0:0:0.70"/>
                                            <ColorAnimation Storyboard.TargetName="Second" 
                                            Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[2].(GradientStop.Color)"
                                            From="DarkGray" To="Blue" Duration="0:0:0.3"  AutoReverse="True"  RepeatBehavior="0:0:1.30"/>
                                            <ColorAnimation Storyboard.TargetName="Third" 
                                            Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[2].(GradientStop.Color)"
                                            From="DarkGray" To="Blue" Duration="0:0:0.3" AutoReverse="True"  RepeatBehavior="0:0:1.90"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>

                        </ControlTemplate.Triggers>
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <Style TargetType="Button" x:Key="RoundBtn">
            <Setter Property="Width" Value="38"/>
            <Setter Property="Height" Value="38"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ClipToBounds="True">

                            <Rectangle Stroke="DarkGray" Fill="Transparent" StrokeThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                             RadiusX="13" RadiusY="13"/>
                            <!--Главный круг-->
                            <Rectangle x:Name="MainRound" Margin="2" Stroke="{StaticResource GrayBlueGradientBrush}" StrokeThickness="2"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" RadiusX="13" RadiusY="13">
                                <Rectangle.Fill>
                                    <RadialGradientBrush GradientOrigin="0.45, 0.57">
                                        <GradientStop Color="White" Offset="0.01"/>
                                        <GradientStop Color="WhiteSmoke" Offset="0.2"/>
                                        <GradientStop Color="Gray" Offset="0.7"/>
                                        <GradientStop Color="White" Offset="1"/>
                                    </RadialGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            
                            <!--Подвижный круг-->
                            <Rectangle x:Name="InnRound" Margin="5" Fill="Transparent" Stroke="White" StrokeThickness="2" RadiusX="20" RadiusY="20"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch" RenderTransformOrigin="0.5, 0.5">
                                <Rectangle.RenderTransform>
                                    <ScaleTransform/>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                            
                            <!--Подвижный круг-->
                            <Rectangle x:Name="OuterRound" Margin="5" Fill="Transparent" Stroke="White" StrokeThickness="2" RadiusX="20" RadiusY="20"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  RenderTransformOrigin="0.5, 0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform/>
                                        <ScaleTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>

                            <!-- текст на кнопке -->
                            <DockPanel Name="myContentPresenterDockPanel">
                                <ContentPresenter x:Name="myContentPresenter" Margin="10" 
          Content="{TemplateBinding  Content}" TextBlock.Foreground="Black" />
                            </DockPanel>
                        </Grid>

                        <ControlTemplate.Triggers>
                            
                            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                <BeginStoryboard Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="MainRound" 
                                        Storyboard.TargetProperty="(Rectangle.Fill).(RadialGradientBrush.GradientStops)[0].(GradientStop.Color)"
                                        To="White" Duration="0:0:0.3"/>

                                        <ColorAnimation Storyboard.TargetName="MainRound" 
                                        Storyboard.TargetProperty="(Rectangle.Fill).(RadialGradientBrush.GradientStops)[1].(GradientStop.Color)" 
                                        To="DarkGray" Duration="0:0:0.3"/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                <EventTrigger.Actions>
                                    <StopStoryboard BeginStoryboardName="MouseOver"/>
                                </EventTrigger.Actions>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="Button.Click">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="InnRound" Storyboard.TargetProperty="(Rectangle.RenderTransform).(ScaleTransform.ScaleX)"
                                             From="-1" SpeedRatio="1" Duration="0:0:0.5"/>

                                            <DoubleAnimation Storyboard.TargetName="OuterRound" Storyboard.TargetProperty="(Rectangle.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)"
                                             From="-1" SpeedRatio="1" Duration="0:0:0.5"/>

                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>


                            <EventTrigger RoutedEvent="LostFocus">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>

                            
                            
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="AngleButton" TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="Foundation" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="23"/>
                                <ColumnDefinition Width="134"/>
                                <ColumnDefinition Width="23"/>
                            </Grid.ColumnDefinitions>

                            <Rectangle x:Name="Laser" Fill="{StaticResource BlueGradientBrush}" Opacity="0" Grid.ColumnSpan="3" Stroke="White" StrokeThickness="1" Height="10" Margin="15,0,15,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>

                            <Image x:Name="Left" Source="Resources/LeftAngle.png" >
                                <Image.RenderTransform>
                                    <TranslateTransform />
                                </Image.RenderTransform>
                            </Image>
                            <Image x:Name="Right" Source="Resources/RightAngle.png"  Grid.Column="2">
                                <Image.RenderTransform>
                                    <TranslateTransform />
                                </Image.RenderTransform>
                            </Image>

                            
                            <!-- текст на кнопке -->
                            <DockPanel Name="myContentPresenterDockPanel" Grid.Column="1">
                                <ContentPresenter x:Name="myContentPresenter" TextBlock.FontFamily="Segoe UI Black" TextBlock.FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center"
          Content="{TemplateBinding  Content}" TextBlock.Foreground="Black" />
                            </DockPanel>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Left" 
                                            Storyboard.TargetProperty="(Image.RenderTransform).(TranslateTransform.X)"
                                            To="155" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="Right" 
                                            Storyboard.TargetProperty="(Image.RenderTransform).(TranslateTransform.X)"
                                            To="-155" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="Laser" Storyboard.TargetProperty="Opacity" To="1" BeginTime="0:0:0.2" Duration="0:0:0"/>
                                            <DoubleAnimation Storyboard.TargetName="Laser" 
                                            Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Offset)"
                                            From="0.2" To="0.9" Duration="0:0:1" AutoReverse="True" RepeatBehavior="Forever"/>
                                        </Storyboard> 
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="MouseLeave">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Left" 
                                            Storyboard.TargetProperty="(Image.RenderTransform).(TranslateTransform.X)"
                                            To="0" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="Right" 
                                            Storyboard.TargetProperty="(Image.RenderTransform).(TranslateTransform.X)"
                                            To="0" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="Laser" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="LightChapterBtn" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value >
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Rectangle x:Name="Rec" Width="200" Height="50"  Stroke="Black" RadiusX="5" RadiusY="5" StrokeThickness="2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Color="Black" Offset="0"/>
                                        <GradientStop Color="White" Offset="0.3"/>
                                        <GradientStop Color="Black" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>

                            <Rectangle x:Name="Laser"  Width="200" Height="15" RadiusX="20" RadiusY="10"  VerticalAlignment="Top" Margin="0,28,0,0">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#FF127DD6" Offset="0"/>
                                        <GradientStop Color="#FFA1CFEA" Offset="0.2"/>
                                        <GradientStop Color="#FF002D4D" Offset="0.4"/>
                                        <GradientStop Color="#FF0E70D1" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                                <Rectangle.RenderTransform>
                                    <TranslateTransform/>
                                </Rectangle.RenderTransform>
                            </Rectangle>

                            <!-- текст на кнопке -->
                            <DockPanel Name="myContentPresenterDockPanel">
                                <ContentPresenter x:Name="myContentPresenter" TextBlock.FontFamily="Segoe UI Black" TextBlock.FontSize="25" HorizontalAlignment="Center" VerticalAlignment="Center"
          Content="{TemplateBinding  Content}" TextBlock.Foreground="White" >
                                    <ContentPresenter.Effect>
                                        <DropShadowEffect BlurRadius="2" ShadowDepth="0" Direction="230" Color="Black" Opacity="0.9"/>
                                    </ContentPresenter.Effect>
                                </ContentPresenter>
                            </DockPanel>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard x:Name="Enter">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Rec" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Offset)" To="0.9" Duration="0:0:1" AutoReverse="True"  RepeatBehavior="Forever"/>
                                            <DoubleAnimation Storyboard.TargetName="Laser" Storyboard.TargetProperty="(Rectangle.RenderTransform).(TranslateTransform.Y)" From="0"  To="30" Duration="0:0:1" AutoReverse="True" RepeatBehavior="Forever"/>
                                            <DoubleAnimation Storyboard.TargetName="Laser" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Offset)" To="0.6" Duration="0:0:0.3" AutoReverse="True"  RepeatBehavior="Forever"/>
                                            <DoubleAnimation Storyboard.TargetName="Laser" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[2].(GradientStop.Offset)" To="0.8" Duration="0:0:0.3" AutoReverse="True"  RepeatBehavior="Forever"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="MouseLeave">
                                <EventTrigger.Actions>
                                    <StopStoryboard BeginStoryboardName="Enter"/>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Rec" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Offset)" To="0.5" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            </Style>


        <Style x:Key="DarkVioletChapterBtn" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value >
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Rectangle x:Name="Rec" Width="200" Height="50"  Stroke="Black" RadiusX="5" RadiusY="5" StrokeThickness="2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Color="Black" Offset="0"/>
                                        <GradientStop Color="DarkSlateGray" Offset="0.4"/>
                                        <GradientStop Color="Black" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>

                           
                            <!-- текст на кнопке -->
                            <DockPanel Name="myContentPresenterDockPanel">
                                <ContentPresenter x:Name="myContentPresenter" TextBlock.FontFamily="Palatino Linotype" TextBlock.FontWeight="Bold" TextBlock.FontSize="25" HorizontalAlignment="Center" VerticalAlignment="Center"
          Content="{TemplateBinding  Content}" TextBlock.Foreground="{StaticResource StretchMetallGradient}" >
                                    <ContentPresenter.Effect>
                                        <DropShadowEffect BlurRadius="0" ShadowDepth="0" Direction="0" Color="White" Opacity="0.9"/>
                                    </ContentPresenter.Effect>
                                </ContentPresenter>
                            </DockPanel>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard x:Name="Enter">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Rec" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Offset)" To="0.6" Duration="0:0:1" AutoReverse="True"  RepeatBehavior="Forever"/>
                                            </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="MouseLeave">
                                <EventTrigger.Actions>
                                    <StopStoryboard BeginStoryboardName="Enter"/>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Rec" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Offset)" To="0.4" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="LockedBtn" TargetType="Button">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Template">
                <Setter.Value >
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Rectangle x:Name="Rec" Width="45" Height="45" Fill="{StaticResource BlackBlueGradientBrush}" Stroke="LightGray" RadiusX="5" RadiusY="5" StrokeThickness="2"/>

                            <Rectangle x:Name="Laser1"  Width="10" Stroke="Black" StrokeThickness="1"  Height="10" RadiusX="3" RadiusY="3" VerticalAlignment="Top" Margin="2" RenderTransformOrigin="0.5,2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#FF979797" Offset="0"/>
                                        <GradientStop Color="White" Offset="0.2"/>
                                        <GradientStop Color="Gray" Offset="0.4"/>
                                        <GradientStop Color="LightGray" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                                <Rectangle.RenderTransform>
                                    <RotateTransform />
                                </Rectangle.RenderTransform>
                            </Rectangle>

                            <Rectangle x:Name="Laser2"  Width="10" Height="10" RadiusX="3" RadiusY="3" VerticalAlignment="Bottom" Margin="2" RenderTransformOrigin="0.5,-1">
                                <Rectangle.Fill>
                                    <VisualBrush Visual="{Binding ElementName=Laser1}"/>
                                </Rectangle.Fill>
                                <Rectangle.RenderTransform>
                                    <RotateTransform />
                                </Rectangle.RenderTransform>
                            </Rectangle>

                            <Rectangle x:Name="Laser3"  Width="10" Height="10" RadiusX="3" RadiusY="3" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="2" RenderTransformOrigin="2,0.5">
                                <Rectangle.Fill>
                                    <VisualBrush Visual="{Binding ElementName=Laser1}"/>
                                </Rectangle.Fill>
                                <Rectangle.RenderTransform>
                                    <RotateTransform />
                                </Rectangle.RenderTransform>
                            </Rectangle>

                            <Rectangle x:Name="Laser4"  Width="10" Height="10" RadiusX="3" RadiusY="3" VerticalAlignment="Center" HorizontalAlignment="Right"  Margin="2" RenderTransformOrigin="-1,0.5">
                                <Rectangle.Fill>
                                    <VisualBrush Visual="{Binding ElementName=Laser1}"/>
                                </Rectangle.Fill>
                                <Rectangle.RenderTransform>
                                    <RotateTransform />
                                </Rectangle.RenderTransform>
                            </Rectangle>
                            <!-- текст на кнопке -->
                            <DockPanel Name="myContentPresenterDockPanel">
                                <ContentPresenter x:Name="myContentPresenter" TextBlock.FontFamily="Segoe UI Black" TextBlock.FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center"
          Content="{TemplateBinding  Content}" TextBlock.Foreground="LightGray" />
                            </DockPanel>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard x:Name="Enter">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Laser1" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" To="#FFD61212" Duration="0:0:0.8"/>
                                            <ColorAnimation Storyboard.TargetName="Laser1" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" To="#FFEAA4A1" Duration="0:0:0.8"/>
                                            <ColorAnimation Storyboard.TargetName="Laser1" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[2].(GradientStop.Color)" To="#FF4D0700" Duration="0:0:0.8"/>
                                            <ColorAnimation Storyboard.TargetName="Laser1" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[3].(GradientStop.Color)" To="#FFD1200E" Duration="0:0:0.8"/>

                                            <DoubleAnimation Storyboard.TargetName="Laser1" Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)" To="360" RepeatBehavior="Forever" Duration="0:0:0.8"/>
                                            <DoubleAnimation Storyboard.TargetName="Laser2" Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)" To="360" RepeatBehavior="Forever" Duration="0:0:0.8"/>
                                            <DoubleAnimation Storyboard.TargetName="Laser3" Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)" To="360" RepeatBehavior="Forever" Duration="0:0:0.8"/>
                                            <DoubleAnimation Storyboard.TargetName="Laser4" Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)" To="360" RepeatBehavior="Forever" Duration="0:0:0.8"/>

                                            <DoubleAnimation Storyboard.TargetName="Rec" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[0].(GradientStop.Offset)"  To="0.8" Duration="0:0:0.4"/>
                                            <DoubleAnimation Storyboard.TargetName="Rec" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Offset)"  To="0.9" Duration="0:0:0.4"/>
                                            <DoubleAnimation Storyboard.TargetName="Rec" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[2].(GradientStop.Offset)" To="1" Duration="0:0:0.4"/>
                                            <DoubleAnimation Storyboard.TargetName="Laser1" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Offset)" To="0.6" Duration="0:0:0.3" AutoReverse="True"  RepeatBehavior="Forever"/>
                                            <DoubleAnimation Storyboard.TargetName="Laser1" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[2].(GradientStop.Offset)" To="0.8" Duration="0:0:0.3" AutoReverse="True"  RepeatBehavior="Forever"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="MouseLeave">
                                <EventTrigger.Actions>
                                    <StopStoryboard BeginStoryboardName="Enter"/>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Rec" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[0].(GradientStop.Offset)"  To="0.45" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetName="Rec" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Offset)"  To="0.55" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetName="Rec" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[2].(GradientStop.Offset)" To="0.65" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="UnlockedBtn" TargetType="Button">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Template">
                <Setter.Value >
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Rectangle x:Name="Rec" Width="45" Height="45" Stroke="Black" RadiusX="5" RadiusY="5" StrokeThickness="2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <GradientStop Color="DarkGray" Offset="0.45"/>
                                        <GradientStop Color="White" Offset="0.55"/>
                                        <GradientStop Color="DarkGray" Offset="0.65"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>

                            <Rectangle x:Name="Laser1"  Width="10" Stroke="Black" StrokeThickness="1"  Height="10" RadiusX="3" RadiusY="3" VerticalAlignment="Top" Margin="2" RenderTransformOrigin="0.5,2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#FF979797" Offset="0"/>
                                        <GradientStop Color="White" Offset="0.2"/>
                                        <GradientStop Color="Gray" Offset="0.4"/>
                                        <GradientStop Color="LightGray" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                                <Rectangle.RenderTransform>
                                    <RotateTransform />
                                </Rectangle.RenderTransform>
                            </Rectangle>

                            <Rectangle x:Name="Laser2"  Width="10" Height="10" RadiusX="3" RadiusY="3" VerticalAlignment="Bottom" Margin="2" RenderTransformOrigin="0.5,-1">
                                <Rectangle.Fill>
                                    <VisualBrush Visual="{Binding ElementName=Laser1}"/>
                                </Rectangle.Fill>
                                <Rectangle.RenderTransform>
                                    <RotateTransform />
                                </Rectangle.RenderTransform>
                            </Rectangle>

                            <Rectangle x:Name="Laser3"  Width="10" Height="10" RadiusX="3" RadiusY="3" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="2" RenderTransformOrigin="2,0.5">
                                <Rectangle.Fill>
                                    <VisualBrush Visual="{Binding ElementName=Laser1}"/>
                                </Rectangle.Fill>
                                <Rectangle.RenderTransform>
                                    <RotateTransform />
                                </Rectangle.RenderTransform>
                            </Rectangle>

                            <Rectangle x:Name="Laser4"  Width="10" Height="10" RadiusX="3" RadiusY="3" VerticalAlignment="Center" HorizontalAlignment="Right"  Margin="2" RenderTransformOrigin="-1,0.5">
                                <Rectangle.Fill>
                                    <VisualBrush Visual="{Binding ElementName=Laser1}"/>
                                </Rectangle.Fill>
                                <Rectangle.RenderTransform>
                                    <RotateTransform />
                                </Rectangle.RenderTransform>
                            </Rectangle>
                            <!-- текст на кнопке -->
                            <DockPanel Name="myContentPresenterDockPanel">
                                <ContentPresenter x:Name="myContentPresenter" TextBlock.FontFamily="Segoe UI Black" TextBlock.FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center"
          Content="{TemplateBinding  Content}" TextBlock.Foreground="Black" />
                            </DockPanel>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard x:Name="Enter">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Laser1" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" To="#FF127DD6" Duration="0:0:0.5"/>
                                            <ColorAnimation Storyboard.TargetName="Laser1" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" To="#FFA1CFEA" Duration="0:0:0.5"/>
                                            <ColorAnimation Storyboard.TargetName="Laser1" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[2].(GradientStop.Color)" To="#FF002D4D" Duration="0:0:0.5"/>
                                            <ColorAnimation Storyboard.TargetName="Laser1" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[3].(GradientStop.Color)" To="#FF0E70D1" Duration="0:0:0.5"/>

                                            <DoubleAnimation Storyboard.TargetName="Laser1" Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)" To="360" RepeatBehavior="Forever" Duration="0:0:0.8"/>
                                            <DoubleAnimation Storyboard.TargetName="Laser2" Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)" To="360" RepeatBehavior="Forever" Duration="0:0:0.8"/>
                                            <DoubleAnimation Storyboard.TargetName="Laser3" Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)" To="360" RepeatBehavior="Forever" Duration="0:0:0.8"/>
                                            <DoubleAnimation Storyboard.TargetName="Laser4" Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)" To="360" RepeatBehavior="Forever" Duration="0:0:0.8"/>

                                            <DoubleAnimation Storyboard.TargetName="Rec" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[0].(GradientStop.Offset)"  To="0" Duration="0:0:0.4"/>
                                            <DoubleAnimation Storyboard.TargetName="Rec" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Offset)"  To="0.5" Duration="0:0:0.4"/>
                                            <DoubleAnimation Storyboard.TargetName="Rec" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[2].(GradientStop.Offset)" To="1" Duration="0:0:0.4"/>
                                            <DoubleAnimation Storyboard.TargetName="Laser1" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Offset)" To="0.6" Duration="0:0:0.3" AutoReverse="True"  RepeatBehavior="Forever"/>
                                            <DoubleAnimation Storyboard.TargetName="Laser1" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[2].(GradientStop.Offset)" To="0.8" Duration="0:0:0.3" AutoReverse="True"  RepeatBehavior="Forever"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="MouseLeave">
                                <EventTrigger.Actions>
                                    <StopStoryboard BeginStoryboardName="Enter"/>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Rec" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[0].(GradientStop.Offset)"  To="0.45" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetName="Rec" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Offset)"  To="0.55" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetName="Rec" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[2].(GradientStop.Offset)" To="0.65" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="NeonRadioBtn" TargetType="{x:Type RadioButton}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="Margin" Value="15"/>
            <Setter Property="OverridesDefaultStyle"  Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="30" Height="30">

                                    <Ellipse x:Name="Border" StrokeThickness="2">
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="WhiteSmoke"  Offset="0" />
                                                <GradientStop Color="Gray"    Offset="1" />
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                        <Ellipse.Fill>
                                            <RadialGradientBrush >
                                                <GradientStop Color="#FE00E7FE" Offset="0.108"/>
                                                <GradientStop Color="#FF0046FF" Offset="0.1"/>
                                                <GradientStop Color="Cyan" Offset="0.365"/>
                                                <GradientStop Color="#FF0055BB" Offset="0.402"/>
                                                <GradientStop Color="#FF00DCFF" Offset="0.703"/>
                                                <GradientStop Color="#FF00A6AE" Offset="0.823"/>
                                                <GradientStop Color="White"  Offset="0.835" />
                                                <GradientStop Color="#FF00F3FF" Offset="0.884"/>
                                            </RadialGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>

                                    <Ellipse x:Name="CheckMark"   Margin="2"  Visibility="Collapsed"
                                                     Fill="{StaticResource MyGlassBrushResource}">
                                    </Ellipse>

                                </Grid>
                            </BulletDecorator.Bullet>
                            
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" >
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Ellipse.Fill).(RadialGradientBrush.GradientStops)[3].(GradientStop.Offset)" To="0.402" Duration="0:0:0.3"/>
                                       </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Ellipse.Fill).(RadialGradientBrush.GradientStops)[3].(GradientStop.Offset)" To="0.689" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"  
                                                                                  Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"  Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>

                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3"/>
                                            
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0"  Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Opacity" To="0.4" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <ContentPresenter Margin="6,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" Content="{TemplateBinding Content}" 
                                                      TextBlock.FontSize="17" TextBlock.FontWeight="Bold" TextBlock.Foreground="#CC00FFFF" RecognizesAccessKey="True" >

                                
                            </ContentPresenter>
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <!--#endregion Button Styles-->

        <Style TargetType="TextBlock" x:Key="ChaptersTblck">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource GrayBlueGradientBrush}"/>
            <Setter Property="FontSize" Value="40"/>
            <Setter Property="FontFamily" Value="Impact"/>
            <Setter Property="BitmapEffect">
                <Setter.Value>
                    <DropShadowBitmapEffect Direction="30" ShadowDepth="10" Softness="0.3"/>
                </Setter.Value>
            </Setter>
        </Style>



<!--
         <Grid Grid.RowSpan="3" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="80"  Panel.ZIndex="-1">

            <Ellipse StrokeThickness="6">
                <Ellipse.Stroke>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="WhiteSmoke"  Offset="0" />
                        <GradientStop Color="Gray"    Offset="1" />
                    </LinearGradientBrush>
                </Ellipse.Stroke>
                <Ellipse.Fill>
                    <RadialGradientBrush >
                        <RadialGradientBrush.GradientStops >
                            <GradientStop Color="#FF0046FF" Offset="0.1"/>
                            <GradientStop Color="#FE00E7FE" Offset="0.108"/>
                            <GradientStop Color="Cyan" Offset="0.38"/>
                            <GradientStop Color="#FF0055BB" Offset="0.39"/>
                            <GradientStop Color="#FF00DCFF" Offset="0.7"/>
                            <GradientStop Color="#FF00A6AE" Offset="0.823"/>
                            <GradientStop Color="White"  Offset="0.835" />
                            <GradientStop Color="#FF00F3FF" Offset="0.884"/>
                        </RadialGradientBrush.GradientStops>
                    </RadialGradientBrush>
                </Ellipse.Fill>
                <Ellipse.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever" Duration="0:0:10">
                                    <DoubleAnimation  Storyboard.TargetProperty="(Ellipse.Fill).(RadialGradientBrush.GradientStops)[3].(GradientStop.Offset)" To="0.689" BeginTime="0:0:2"  AutoReverse="True" Duration="0:0:3">
                                        <DoubleAnimation.EasingFunction>
                                            <BounceEase Bounces="3" Bounciness="0.4" EasingMode="EaseIn"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <ColorAnimation  Storyboard.TargetProperty="(Ellipse.Fill).(RadialGradientBrush.GradientStops)[7].(GradientStop.Color)" To="#FE00ADFE" BeginTime="0:0:2" AutoReverse="True" Duration="0:0:3">
                                        <ColorAnimation.EasingFunction>
                                            <BounceEase Bounces="3" Bounciness="0.4" EasingMode="EaseIn"/>
                                        </ColorAnimation.EasingFunction>
                                    </ColorAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Ellipse.Triggers>
            </Ellipse>

            <Image gif:ImageBehavior.AnimatedSource="Resources/KEaO.gif" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Grid>

        -->

        <Style TargetType="Polygon" x:Key="SilverMain">
            <Setter Property="Points" Value="0,0 400,0 300,50 0,50"/>
            <Setter Property="Fill">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="DarkGray" Offset="0" />
                        <GradientStop Color="White" Offset="0.07" />
                        <GradientStop Color="DarkGray" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard >
                                <DoubleAnimation 
                                Storyboard.TargetProperty="(Polygon.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Offset)"
                                To="0.7" Duration="0:0:0.4" AccelerationRatio="0.9"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard >
                                <DoubleAnimation 
                                Storyboard.TargetProperty="(Polygon.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Offset)"
                                To="0.07" Duration="0:0:0.4" AccelerationRatio="0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>





        
        <!--Scrollbar-->
        <Style x:Key="ScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="18">
                            <Polygon Fill="LightBlue" Points="3,15 15,15 9,3"></Polygon>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarLineButtonBottomStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="18">
                            <Polygon Fill="LightBlue" Points="3,3 9,15 15,3"></Polygon>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border BorderBrush="Transparent"></Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Margin" Value="1,0,1,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle Fill="LightBlue" RadiusX="5" RadiusY="5" Margin="2"></Rectangle>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>

                <RepeatButton Grid.Row="0" Height="18"
                          Style="{StaticResource ScrollBarLineButtonStyle}"
                          Command="ScrollBar.LineUpCommand" >
                </RepeatButton>
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumbStyle}">
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Height="18"
                          Style="{StaticResource ScrollBarLineButtonBottomStyle}"
                          Command="ScrollBar.LineDownCommand">
                </RepeatButton>
            </Grid>
        </ControlTemplate>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
        </Style>

    </Application.Resources>
</Application>
